{"version":3,"sources":["webpack://LetterLoading/webpack/universalModuleDefinition","webpack://LetterLoading/webpack/bootstrap","webpack://LetterLoading/./src/defaults.js","webpack://LetterLoading/./src/loadinitializer.js","webpack://LetterLoading/./src/letterloading.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaults","loadspeed","defaultspeed","char","hideChaar","delay","loop","loadinitializer","load","self","el","options","document","querySelector","initialElContent","textContent","loadSpeed","defaultSpeed","strings","map","string","trim","currentStrPos","_shuffle","currentString","randomEl","hideChar","ArrayIndex","delayAnime","sequence","this","appendCsstoHead","hideCharByForce","css","createElement","type","setAttribute","innerCss","length","innerHTML","body","appendChild","LetterLoading","constructor","beginAnimation","destroy","reset","restart","clearInterval","timeout","insertText","setTimeout","randomMize","beginAnime","curr","str","random","startFetching","humanize","keys","getSudoStringArray","doAnime","newstr","join","initialArrayContent","push","getStringKeysIntoArray","stringlength","sort","Math","speed","round"],"mappings":"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","file":"letterloading.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LetterLoading\"] = factory();\n\telse\n\t\troot[\"LetterLoading\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const defaults = {\r\n  loadspeed: 9,\r\n  defaultspeed: 8,\r\n  char: \"-\",\r\n  hideChaar: true,\r\n  delay: 2500,\r\n  loop: true,\r\n};\r\n\r\nexport default defaults;\r\n","import defaults from \"./defaults.js\";\r\n\r\nexport default class LoadInitializer {\r\n  load(self, el, options) {\r\n   \r\n      if (typeof el === \"string\") {\r\n        self.el= document.querySelector(el)\r\n      } else {\r\n         self.el = el\r\n      }\r\n    \r\n      // make options from default s and the rest\r\n    self.options = { ...defaults, ...options };\r\n\r\n    self.initialElContent = self.el.textContent;\r\n\r\n    //loading speed\r\n    self.loadSpeed = self.options.loadspeed;\r\n\r\n    // generate default speed\r\n    self.defaultSpeed = self.options.defaultspeed;\r\n\r\n    //loop\r\n    self.loop = self.options.loop;\r\n\r\n    // strings\r\n    // then remove the space infront and back...\r\n    // it is needed for us to make better string num \r\n    // calculations\r\n    self.strings = self.options.strings.map((string)=> string.trim());\r\n\r\n    //current string position\r\n    self.currentStrPos = 0;\r\n\r\n    //default shuffling\r\n    self._shuffle = false;\r\n\r\n    // bind currentString\r\n    self.currentString;\r\n\r\n    // get randomelement\r\n    self.randomEl;\r\n\r\n    // hidden char to fill space\r\n    self.char = self.options.char;\r\n\r\n    //if hide char\r\n    self.hideChar = self.options.hideChaar;\r\n\r\n    // array index\r\n    self.ArrayIndex = 0;\r\n\r\n    // set time to wait before rendering animation to DOM\r\n    self.delayAnime = 500\r\n\r\n    // delay before continuing to loop over string\r\n    self.delay = self.options.delay;\r\n\r\n    // stringlength\r\n    // get order in which strings appeared in array\r\n    self.sequence = [];\r\n    for (let i in self.strings) {\r\n      self.sequence[i] = i;\r\n    }\r\n    this.appendCsstoHead(self);\r\n    this.hideCharByForce(self);\r\n  }\r\n  hideCharByForce(self) {\r\n    if (!self.hideChar) return;\r\n    self.char = `<span class=\"data-hide\">${self.char}</span>`;\r\n  }\r\n\r\n  appendCsstoHead(self) {\r\n    const cssname = \"data-hide\";\r\n\r\n    if (!self.hideChar) {\r\n      return;\r\n    }\r\n    if (document.querySelector(`[${cssname}]`)) {\r\n      return;\r\n    }\r\n\r\n    let css = document.createElement(\"style\");\r\n    css.type = \"text/css\";\r\n    css.setAttribute(cssname, true);\r\n\r\n    let innerCss = \"\";\r\n\r\n    if (self.hideChar) {\r\n      innerCss += `\r\n              .data-hide{\r\n                opacity: 0;}`;\r\n    }\r\n\r\n    if (css.length === 0) {\r\n      return;\r\n    }\r\n    css.innerHTML = innerCss;\r\n    document.body.appendChild(css);\r\n  }\r\n \r\n  \r\n}\r\n\r\nexport let loadinitializer = new LoadInitializer();\r\n","import { loadinitializer } from \"./loadinitializer.js\";\r\n\r\n/**\r\n * Hey, tell me you love to simulate letter loading...\r\n *\r\n * @param {string} el, this can be an HMTL element ID or element\r\n * @param {object} options options is an object that has some of the requirements. Check './defaults.js' to learn more\r\n * @returns {object} a new LetterLoading object\r\n */\r\nexport default class LetterLoading {\r\n  // construct --- no construct\r\n  constructor(el, options) {\r\n    // initial required params --- load methos available in loadinitializer\r\n    loadinitializer.load(this, el, options);\r\n\r\n    // this methos begins the letter loading simulation\r\n    this.beginAnimation();\r\n  }\r\n\r\n  destroy() {\r\n    this.reset(false);\r\n    //this.options.onDestroy(this);\r\n  }\r\n\r\n  reset(restart = true) {\r\n    clearInterval(this.timeout);\r\n    this.insertText(\"\");\r\n    this.currentStrPos = 0;\r\n    this.ArrayIndex = 0;\r\n  }\r\n\r\n  beginAnimation() {\r\n    // ....WELCOME, wait for half a sec before starting animation -- wait sec is set as\r\n    // @param: delayAnime\r\n    this.timeout = setTimeout(() => {\r\n      // get a random string from options.STRINGS array if _shuffle is true\r\n      this.randomMize();\r\n      this.beginAnime(this.currentStrPos, this.strings[this.ArrayIndex]);\r\n    }, this.delayAnime);\r\n  }\r\n\r\n  beginAnime(i, curr, str = []) {\r\n    // set this.currentString to the passed string args\r\n    this.currentString = curr;\r\n    // creates a randomArray element usable to suff our strings\r\n    this.random();\r\n    // start fetching letters\r\n    this.startFetching(i, curr, str);\r\n  }\r\n\r\n  startFetching(i, curr, str) {\r\n    // increase the speed at some point\r\n    // if string reaches 20%,40% and 70% decrease speed by 20% consecutively\r\n    if(i >= (0.70*curr.length)){\r\n      this.loadSpeed = (this.loadSpeed - (0.50*this.loadSpeed));\r\n    }else if (i >= (0.40 * curr.length)){\r\n      this.loadSpeed = (this.loadSpeed-(0.20*this.loadSpeed));\r\n    }else if (i >= (0.20 * curr.length)){\r\n      this.loadSpeed = (this.loadSpeed-(0.20*this.loadSpeed));\r\n    }\r\n     \r\n\r\n    // make a simulating speed\r\n    const humanize = this.humanize(this.loadSpeed);\r\n    // check state if its empty\r\n    if (Object.keys(str).length === 0)\r\n      str = this.getSudoStringArray(curr.length, this.char);\r\n\r\n      // if our letter index is last in the immediate string,\r\n    if (i > curr.length - 1) {\r\n      this.ArrayIndex++;\r\n      this.currentStrPos = 0;\r\n      this.loadSpeed = this.defaultSpeed;\r\n      // check if the string is the last string\r\n      if (this.ArrayIndex === this.strings.length) {\r\n        // if loop is set to false, stop animation\r\n        if (!this.loop) return;\r\n        // else continue\r\n        this.ArrayIndex = 0;\r\n        this.timeout = setTimeout(() => {\r\n          this.beginAnimation();\r\n        }, this.delay);\r\n        // if it is not the last string, just do the next animation with the next string\r\n      } else {\r\n        this.timeout = setTimeout(() => {\r\n          // begin animation again\r\n          this.beginAnime(this.currentStrPos, this.strings[this.ArrayIndex]);\r\n        }, this.delay);\r\n      }//if there are other letters, move to the next letter in string\r\n    } else {\r\n      i++;\r\n\r\n      this.timeout = setTimeout(() => {\r\n        // add animations\r\n        this.doAnime(str, i);\r\n      }, humanize);\r\n    }\r\n  }\r\n\r\n  doAnime(str, i) {\r\n    str[this.randomEl[i - 1]] = this.currentString[this.randomEl[i - 1]];\r\n    let newstr = str.join(\"\");\r\n    this.insertText(newstr);\r\n    this.startFetching(i, this.currentString, str);\r\n  }\r\n\r\n  getSudoStringArray(length, char) {\r\n    let initialArrayContent = [];\r\n    for (let i = 0; i < length; i++) {\r\n      initialArrayContent.push(char);\r\n    }\r\n    return initialArrayContent;\r\n  }\r\n\r\n  getStringKeysIntoArray(stringlength) {\r\n    let strings = [];\r\n    for (let i = 0; i < stringlength; i++) {\r\n      strings.push(i);\r\n    }\r\n    return strings;\r\n  }\r\n\r\n  random() {\r\n    const randomEl = this.getStringKeysIntoArray(this.currentString.length);\r\n    this.randomEl = randomEl.sort(() => Math.random() - 0.5);\r\n  }\r\n\r\n  humanize(speed) {\r\n    return Math.round((Math.random() * (speed * 100)) / 2) + speed * 100;\r\n  }\r\n\r\n  insertText(str) {\r\n    this.el.innerHTML = str;\r\n  }\r\n\r\n  randomMize() {\r\n    if (!this._shuffle) return;\r\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\r\n  }\r\n}\r\n"],"sourceRoot":""}