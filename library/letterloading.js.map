{"version":3,"sources":["webpack://LetterLoading/webpack/universalModuleDefinition","webpack://LetterLoading/webpack/bootstrap","webpack://LetterLoading/./src/defaults.js","webpack://LetterLoading/./src/funcCss.js","webpack://LetterLoading/./src/loadinitializer.js","webpack://LetterLoading/./src/letterloading.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaults","strings","loadspeed","char","hideChaar","delay","loop","randomizeEl","cursor","css","color","initializer","load","self","el","options","document","querySelector","initialElContent","textContent","loadSpeed","defaultSpeed","map","string","trim","currentStrPos","_shuffle","currentString","randomEl","hideChar","ArrayIndex","delayAnime","simulate","cursorExist","cColor","cursorType","blinking","sequence","setToTyped","appendCsstoHead","hideCharByForce","check","console","log","createElement","type","setAttribute","innerCss","undefined","Error","cssStyles","length","innerHTML","body","appendChild","LetterLoading","constructor","beginAnimation","destroy","reset","restart","clearInterval","timeout","insertText","setTimeout","randomMize","makeCursor","beginAnime","curr","str","random","startFetching","typedSpeed","appendCursor","loadingSpeed","strIndex","simulater","option","humanize","keys","getSudoStringArray","doAnime","newstr","join","sudoContentInArray","push","getStringKeysIntoArray","stringlength","sort","Math","speed","round","node","cur","getCursorType","className","cursorCha","getCursorCha","append","parentNode","insertBefore","nextSibling"],"mappings":"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","file":"letterloading.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LetterLoading\"] = factory();\n\telse\n\t\troot[\"LetterLoading\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const defaults = {\r\n  strings: [\r\n    \"hey lovely,\",\r\n    \"use your own string...\",\r\n    \"abi you no go use am\"\r\n  ],\r\n  loadspeed: 9,\r\n  char: \"-\",\r\n  hideChaar: true,\r\n  delay: 2500,\r\n  loop: true,\r\n  randomizeEl: true,\r\n  cursor: true\r\n};\r\n\r\nexport default defaults;\r\n","function css (color) {\r\n    return `.line-cursor {\r\n        font-weight: 100;\r\n        font-size: 20px;\r\n        -webkit-animation: 1s blink step-end infinite;\r\n        -moz-animation: 1s blink step-end infinite;\r\n        -ms-animation: 1s blink step-end infinite;\r\n        -o-animation: 1s blink step-end infinite;\r\n        animation: 1s blink step-end infinite;\r\n      }\r\n      .block-cursor {\r\n        font-weight: 900;\r\n        width: 800px;\r\n        -webkit-animation: 1s blink step-end infinite;\r\n        -moz-animation: 1s blink step-end infinite;\r\n        -ms-animation: 1s blink step-end infinite;\r\n        -o-animation: 1s blink step-end infinite;\r\n        animation: 1s blink step-end infinite;\r\n      }\r\n      .underscore-cursor {\r\n        font-weight: 900;\r\n        width: 800px;\r\n        -webkit-animation: 1s blink step-end infinite;\r\n        -moz-animation: 1s blink step-end infinite;\r\n        -ms-animation: 1s blink step-end infinite;\r\n        -o-animation: 1s blink step-end infinite;\r\n        animation: 1s blink step-end infinite;\r\n      }\r\n      @keyframes blink {\r\n        from, to {\r\n          opacity: 0.9;\r\n        }\r\n        50%{\r\n          opacity: 0.0;\r\n        }\r\n      }\r\n\r\n      @-moz-keyframes blink {\r\n        from, to {\r\n          opacity: 0.9;\r\n        }\r\n        50%{\r\n          opacity: 0.0;\r\n        }\r\n      }\r\n      @-webkit-keyframes blink {\r\n        from, to {\r\n          opacity: 0.9;\r\n        }\r\n        50%{\r\n          opacity: 0.0;\r\n        }\r\n      }\r\n      @-ms-keyframes \"blink\" {\r\n        from, to {\r\n          opacity: 0.9;\r\n        }\r\n        50%{\r\n          opacity: 0.0;\r\n        }\r\n      }\r\n      @-o-keyframes \"blink\" {\r\n        from, to {\r\n          opacity: 0.9;\r\n        }\r\n        50%{\r\n          opacity: 0.0;\r\n        }\r\n      }\r\n\r\n      .block {\r\n        width: 0.45rem;\r\n        padding: 0.5em 0.07em;\r\n        display: inline-block;\r\n        background: ${color ? color : 'black'};\r\n        margin-left: 0.1em;\r\n        margin-top: 0.3em;\r\n        top: 5px;\r\n      }\r\n    `\r\n}\r\n\r\nexport default css;","import defaults from \"./defaults.js\";\r\nimport {default as cssStyles} from \"./funcCss\"\r\n\r\nexport default class LoadInitializer {\r\n  load(self, el, options) {\r\n    // node\r\n    self.el = (document.querySelector(el) || el)\r\n    \r\n    // make new options from defaults and the rest\r\n    self.options = { ...defaults, ...options };\r\n\r\n    self.initialElContent = self.el.textContent;\r\n\r\n    //loading speed\r\n    self.loadSpeed = self.options.loadspeed;\r\n\r\n    // generate default speed\r\n    self.defaultSpeed = self.options.loadspeed;\r\n\r\n    //loop\r\n    self.loop = self.options.loop;\r\n\r\n    // strings\r\n    // then remove the space infront and back...\r\n    // it is needed for us to make better string num \r\n    // calculations\r\n    self.strings = self.options.strings.map((string)=> string.trim());\r\n\r\n    //current string position\r\n    self.currentStrPos = 0;\r\n\r\n    /**  tell if to randomize letters or not */\r\n    self.randomizeEl =  self.options.randomizeEl\r\n\r\n    //default shuffling\r\n    self._shuffle = false;\r\n\r\n    // bind currentString\r\n    self.currentString;\r\n\r\n    // get randomelement\r\n    self.randomEl;\r\n\r\n    // hidden char to fill space\r\n    self.char =  self.options.char;\r\n\r\n    //if hide char\r\n    self.hideChar = self.options.hideChaar;\r\n\r\n    // array index\r\n    self.ArrayIndex = 0;\r\n\r\n    // set time to wait before rendering animation to DOM\r\n    self.delayAnime = 500\r\n\r\n    // delay before continuing to loop over string\r\n    self.delay = self.options.delay;\r\n\r\n    // intuitively tell me what to do\r\n    self.simulate = self.options.simulate;\r\n\r\n    // monitor set cursor or not\r\n    this.cursorExist = false;\r\n    //make cursor or not\r\n    self.cursor = self.options.cursor;\r\n\r\n    // cursor color\r\n    self.cColor = self.options.color;\r\n\r\n    //set cursorType\r\n    self.cursorType = self.options.cursorType\r\n\r\n    // describe your cursor type, we have them\r\n    /**\r\n     * cursor can be\r\n     * Blocked\r\n     * Line\r\n     * Underscore\r\n     */\r\n    /**blinking defaults to \"yes\" */\r\n    self.blinking = self.options.blinking;\r\n    // stringlength\r\n    // get order in which strings appeared in array\r\n    self.sequence = [];\r\n    for (let i in self.strings) {\r\n      self.sequence[i] = i;\r\n    }\r\n    // set simulate first\r\n    this.setToTyped(self)\r\n    // this.check(self)\r\n    this.appendCsstoHead(self);\r\n    this.hideCharByForce(self);\r\n  }\r\n\r\n  check(self){\r\n    console.log(self.cursorType)\r\n  }\r\n\r\n  setToTyped (self) {\r\n    if(self.simulate === \"typed\") {\r\n      self.char = \"\"\r\n      self.randomizeEl = false\r\n    }\r\n  }\r\n\r\n  hideCharByForce(self) {\r\n    if (!self.hideChar) return;\r\n    self.char = `<span class=\"data-hide\">${self.char}</span>`;\r\n  }\r\n\r\n  appendCsstoHead(self) {\r\n    console.log(self.options)\r\n    const color = self.cColor;\r\n\r\n    const cssname = \"data-type-css\";\r\n\r\n    if (!self.hideChar) {\r\n      return;\r\n    }\r\n    if (document.querySelector(`[${cssname}]`)) {\r\n      return;\r\n    }\r\n\r\n    let css = document.createElement(\"style\");\r\n    // depreciation was of W3C and WHT...\r\n    // visit https://github.com/microsoft/TypeScript/issues/30791 for more info\r\n    css.type = \"text/css\";\r\n    css.setAttribute(cssname, true);\r\n\r\n    let innerCss = \"\";\r\n\r\n    if (self.hideChar) {\r\n      innerCss += `\r\n              .data-hide{\r\n                opacity: 0;}`;\r\n    }\r\n\r\n    if(self.cursor) {\r\n      if (self.cursorType === undefined)return;\r\n      if(self.cursorType !== \"line\" && self.cursorType !== \"underscore\" && self.cursorType !== \"block\"){\r\n        throw new Error(\"sekx says: your cursorType isn't a valid cursorType\")\r\n      }\r\n      innerCss += cssStyles(color)\r\n    }\r\n\r\n\r\n    if (css.length === 0) {\r\n      return;\r\n    }\r\n    css.innerHTML = innerCss;\r\n    document.body.appendChild(css);\r\n  }\r\n \r\n  \r\n}\r\n\r\nexport let initializer = new LoadInitializer();\r\n","import { initializer } from \"./loadinitializer.js\";\r\n\r\n/**\r\n * Hey, tell me you love to simulate letters loading effects...\r\n *\r\n * @param {string} el, this can be an HMTL element ID attribute or\r\n *  all ready called element.\r\n * @param {object} options options is an object that has some \r\n * predefined letterloading attributes. Check './defaults.js' to learn more\r\n * @returns {object} a new LetterLoading object\r\n */\r\nexport default class LetterLoading {\r\n  constructor(el, options) {\r\n    // initial required params --- load methods available in loadinitializer\r\n    initializer.load(this, el, options);\r\n\r\n    // this method begins the letter loading simulation\r\n    this.beginAnimation();\r\n  }\r\n\r\n  destroy() {\r\n    this.reset(false);\r\n    //this.options.onDestroy(this);\r\n  }\r\n\r\n  reset(restart = true) {\r\n    clearInterval(this.timeout);\r\n    this.insertText(\"\");\r\n    this.currentStrPos = 0;\r\n    this.ArrayIndex = 0;\r\n  }\r\n\r\n  beginAnimation() {\r\n    // ....WELCOME, wait for half a sec before starting animation \r\n    //  wait second is set as delayAnime at `line 53 loadinitializer.js`\r\n    this.timeout = setTimeout(() => {\r\n      // get a random string from options.STRINGS array if \r\n      // this.shuffle is true\r\n      this.randomMize();\r\n      // currentStrPos is the place of lettter in a string[, this.strings] usually 0,\r\n      // this.strings[, this.ArrayIndex] is the string you want to animate\r\n\r\n      // before you go ahead, if cursor is set to true make one\r\n      this.makeCursor()\r\n      this.beginAnime(this.currentStrPos, this.strings[this.ArrayIndex]);\r\n    }, this.delayAnime);\r\n  }\r\n\r\n  beginAnime(currentStrPos, curr, str = []) {\r\n    // set this.currentString to the passed string args\r\n    this.currentString = curr;\r\n    // creates a randomArray element use-able to suff our strings if told to do so\r\n    this.random();\r\n    // start fetching letters\r\n    this.startFetching(currentStrPos, curr, str);\r\n  }\r\n\r\n  typedSpeed(){\r\n    return this.loadSpeed\r\n  }\r\n\r\n  makeCursor (){\r\n    if (this.cursorExist) return\r\n    if (this.cursor){\r\n      this.appendCursor();\r\n      this.cursorExist = true;\r\n      return\r\n    }\r\n    return;\r\n  }\r\n\r\n  loadingSpeed(strIndex, currentString){\r\n    // increase the speed at some point: so that\r\n    // if string reaches 20%, 40% and 70% length of the currentString,\r\n    //  increase speed for fetching (loadSpeed) by 20% consecutively\r\n    if(strIndex >= (0.70*currentString.length)){\r\n      this.loadSpeed = (this.loadSpeed - (0.50 * this.loadSpeed));\r\n    }else if (strIndex >= (0.40 * currentString.length)){\r\n      this.loadSpeed = (this.loadSpeed-(0.20 * this.loadSpeed));\r\n    }else if (strIndex >= (0.20 * currentString.length)){\r\n      this.loadSpeed = (this.loadSpeed-(0.20 * this.loadSpeed));\r\n    }\r\n\r\n    return this.loadSpeed\r\n  }\r\n\r\n  simulater(option, strIndex, currentString){\r\n    if (option === \"typed\") {\r\n      return this.typedSpeed()\r\n    }\r\n    return this.loadingSpeed(strIndex, currentString)\r\n  }\r\n  startFetching(strIndex, currentString, str) {\r\n    this.simulater(this.simulate, strIndex, currentString)\r\n    // make a simulating speed\r\n    const humanize = this.humanize(this.loadSpeed);\r\n    // check state if its empty:\r\n    // this simply creates a sudoString we then we compare and print to the screen\r\n    // with doAnime\r\n    if (Object.keys(str).length === 0)\r\n      str = this.getSudoStringArray(currentString.length, this.char);\r\n\r\n    /** if the present letter to be printed is last in the  currentString,*/\r\n    if (strIndex > currentString.length - 1) {\r\n      this.ArrayIndex++;\r\n      this.currentStrPos = 0;\r\n      this.loadSpeed = this.defaultSpeed;\r\n      // if the letter is last, \r\n      // check if the string is the last string too\r\n      // if both agrees to true,\r\n      if (this.ArrayIndex === this.strings.length) {\r\n        // Do not loop when loop parameter is set to false: stop animation\r\n        if (!this.loop) return;\r\n        // else, continue the animation and go to the first string in the array\r\n        this.ArrayIndex = 0;\r\n        this.timeout = setTimeout(() => {\r\n          this.beginAnimation();\r\n        }, this.delay);\r\n        // if it is not the last string, just do the next animation with the next string\r\n      } else {\r\n        this.timeout = setTimeout(() => {\r\n          // begin animation again\r\n          this.beginAnime(this.currentStrPos, this.strings[this.ArrayIndex]);\r\n        }, this.delay);\r\n      }//if there are other letters, move to the next letter in string\r\n    } else {\r\n      strIndex++;\r\n\r\n      this.timeout = setTimeout(() => {\r\n        // add animations\r\n        this.doAnime(str, strIndex);\r\n      }, humanize);\r\n    }\r\n  }\r\n\r\n  doAnime(str, i) {\r\n    str[this.randomEl[i - 1]] = this.currentString[this.randomEl[i - 1]];\r\n    let newstr = str.join(\"\");\r\n    this.insertText(newstr);\r\n    this.startFetching(i, this.currentString, str);\r\n  }\r\n\r\n  // this method helps us to create a replica number of string character\r\n  // but in a sudo form.\r\n  getSudoStringArray(length, char) {\r\n    let sudoContentInArray = [], i;\r\n    for ( i = 0; i < length; i++) {\r\n      sudoContentInArray.push(char);\r\n    }\r\n    return sudoContentInArray;\r\n  }\r\n\r\n  getStringKeysIntoArray(stringlength) {\r\n    let strings = [];\r\n    for (let i = 0; i < stringlength; i++) {\r\n      strings.push(i);\r\n    }\r\n    return strings;\r\n  }\r\n\r\n  random() {\r\n    const randomEl = this.getStringKeysIntoArray(this.currentString.length);\r\n    if(this.randomizeEl){\r\n      this.randomEl = randomEl.sort(() => Math.random() - 0.5);\r\n      return;\r\n    }\r\n    this.randomEl = randomEl\r\n  }\r\n\r\n  humanize(speed) {\r\n    return Math.round((Math.random() * (speed * 100)) / 2) + speed * 100;\r\n  }\r\n\r\n  appendCursor (){\r\n        const node = document.createElement(\"span\");\r\n        const cur = this.getCursorType(this.cursorType)\r\n        node.className = cur;\r\n        const cursorCha = this.getCursorCha(this.cursorType)\r\n        if(!cursorCha)return\r\n        node.append(cursorCha);\r\n        // console.log(node)\r\n        this.el.parentNode &&\r\n      this.el.parentNode.insertBefore(node, this.el.nextSibling);\r\n  }\r\n\r\n  getCursorCha(type){\r\n    const node = document.createElement(\"span\");\r\n    node.className = \"block\"\r\n    if (type === \"line\") return \"|\"\r\n    else if (type === \"block\") return node;\r\n    else if (type === \"underscore\")return \"_\"\r\n  }\r\n\r\n  getCursorType(type){\r\n    if (type === \"line\") return \"line-cursor\"\r\n    else if (type === \"block\") return \"block-cursor\"\r\n    else if (type === \"underscore\")return \"underscore-cursor\"\r\n  }\r\n  insertText(str) {\r\n    this.el.innerHTML = str;\r\n  }\r\n\r\n  randomMize() {\r\n    if (!this._shuffle) return;\r\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\r\n  }\r\n}\r\n"],"sourceRoot":""}